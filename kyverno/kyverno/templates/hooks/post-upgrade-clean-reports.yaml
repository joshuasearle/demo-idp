---
# Source: kyverno/templates/hooks/post-upgrade-clean-reports.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: kyverno-clean-reports
  namespace: kyverno
  labels:
    app.kubernetes.io/component: hooks
    app.kubernetes.io/instance: kyverno
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: kyverno
    app.kubernetes.io/version: 3.4.4
    helm.sh/chart: kyverno-3.4.4
  annotations:
    helm.sh/hook: post-upgrade
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded,hook-failed
spec:
  backoffLimit: 2
  template:
    spec:
      serviceAccountName: kyverno-admission-controller
      restartPolicy: Never
      containers:
        - name: kubectl
          image: "bitnami/kubectl:1.32.3"
          imagePullPolicy: 
          command:
            - /bin/bash
            - -c
            - |
              set -euo pipefail
              NAMESPACES=$(kubectl get namespaces --no-headers=true | awk '{print $1}')

              for ns in ${NAMESPACES[@]};
              do
                COUNT=$(kubectl get policyreports.wgpolicyk8s.io -n $ns --no-headers=true | awk '/pol/{print $1}' | wc -l)

                if [ $COUNT -gt 0 ]; then
                  echo "deleting $COUNT policyreports in namespace $ns"
                  kubectl get policyreports.wgpolicyk8s.io -n $ns --no-headers=true | awk '/pol/{print $1}' | xargs kubectl delete -n $ns policyreports.wgpolicyk8s.io
                else
                  echo "no policyreports in namespace $ns"
                fi
              done

              COUNT=$(kubectl get clusterpolicyreports.wgpolicyk8s.io --no-headers=true | awk '/pol/{print $1}' | wc -l)

              if [ $COUNT -gt 0 ]; then
                echo "deleting $COUNT clusterpolicyreports"
                kubectl get clusterpolicyreports.wgpolicyk8s.io --no-headers=true | awk '/pol/{print $1}' | xargs kubectl delete clusterpolicyreports.wgpolicyk8s.io
              else
                echo "no clusterpolicyreports"
              fi
          resources:
            limits:
              cpu: 100m
              memory: 256Mi
            requests:
              cpu: 10m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsGroup: 65534
            runAsNonRoot: true
            runAsUser: 65534
            seccompProfile:
              type: RuntimeDefault
